@model JobOfferCreateView
@{
    ViewData["Title"] = "Edit";
}

<div class="row">
    <div class="col-sm-12">
        <h2>Edit Job Offer</h2>
        @using (Html.BeginForm("Edit", "JobOffer", FormMethod.Post, new { id = "jobOfferFormEdit" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(m => m.JobTitle)
                @Html.EditorFor(m => m.JobTitle, new { htmlAttributes = new { @class = "form-control", data_bind = "value:jobTitle" } })
                @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Company)
                @Html.DropDownListFor(m => m.CompanyId,
                    Model.Companies.Select(c => new SelectListItem {Text =c.Name, Value = c.ID.ToString() }),
                    new { @class = "form-control", data_bind = "value:company" })
                @Html.ValidationMessageFor(m => m.CompanyId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Location)
                @Html.EditorFor(m => m.Location, new { htmlAttributes = new { @class = "form-control", data_bind = "value:location" } })
                @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.SalaryFrom)
                <div class="input-group">
                    <span class="input-group-addon">PLN</span>
                    @Html.EditorFor(m => m.SalaryFrom, new { htmlAttributes = new { @class = "form-control", placeholder = "From", data_bind = "value:salaryFrom" } })
                    <span class="input-group-addon">.00</span>
                </div>
                @Html.ValidationMessageFor(m => m.SalaryFrom, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.SalaryTo)
                <div class="input-group">
                    <span class="input-group-addon">PLN</span>
                    @Html.EditorFor(m => m.SalaryTo, new { htmlAttributes = new { @class = "form-control", placeholder = "To", data_bind = "value:salaryTo" } })
                    <span class="input-group-addon">.00</span>
                </div>
                @Html.ValidationMessageFor(m => m.SalaryTo, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ValidUntil)
                <div class="input-group">
                    @Html.EditorFor(m => m.ValidUntil, new { htmlAttributes = new { @class = "form-control", type = "Date", data_bind = "value:validUntil" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.ValidUntil, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter description", data_bind = "value:description" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group" id="edit-btn-container">
                <button type="submit" class="btn btn-primary">Edit</button>
            </div>
            @Html.ActionLink("Go back to details", "Details", "JobOffer",new {id = Model.ID}, new { @class = "btn btn-primary" })
        }
    </div>
</div> 

<script src="@Url.Content("~/js/ajax-post.js")"></script>